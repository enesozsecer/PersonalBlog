@using MyBlog.Entity.DTO.AboutDTO
@using MyBlog.Entity.Result
@model UIResponse<AboutGetDTO>
@{
    ViewData["Title"] = "About";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    // Örnek bir DateTime nesnesi oluşturuluyor
    DateTime birthDate = Model.Data.BirthDate;
    // DateTime nesnesini bir tarih formatına çevirme
    string formattedDate = birthDate.ToString("yyyy-MM-dd");
}
<div class="row bg-secondary rounded justify-content-center ">
    <div class="bg-secondary rounded h-100 py-4 col-md-6">
        <h6 class="mb-4">Hakkımda</h6>
        <div class="form-floating mb-3 d-flex justify-content-center">
            <img style="height:150px; width:150px; border-radius:50%;" src="~/images/@Model.Data.Photo" alt="Profil Resmi">
            <input hidden name="Photo" type="text" class="form-control" id="Photo" placeholder="Ad Soyad" value="@Model.Data.Photo">
        </div>
        <form>
            <div class="mb-3">
                <label for="formFileSm" class="form-label">Profil Resmi Seç</label>
                <input name="Photo" class="form-control bg-dark" id="FormFile" type="file" value="@Model.Data.Photo">
            </div>
            <div class="form-floating mb-3">
                <input name="Intro" type="text" class="form-control" id="Intro" placeholder="Ön Söz" value="@Model.Data.Intro" required>
                <label for="floatingInput">Ön Söz</label>
            </div>
            <div class="form-floating mb-3">
                <input name="NameSurname" type="text" class="form-control" id="NameSurname" placeholder="Ad Soyad" value="@Model.Data.NameSurname" required>
                <label for="floatingInput">Ad Soyad</label>
            </div>
            <div class="form-floating mb-3">
                <input name="BirthDate" type="date" class="form-control" id="BirthDate" placeholder="Doğum Tarihi" value="@formattedDate" required>
                <label for="floatingPassword">Doğum Tarihi</label>
            </div>
            <div class="form-floating mb-3">
                <input name="Job" type="text" class="form-control" id="Job" placeholder="Front-end-Back-end" value="@Model.Data.Job" required>
                <label for="floatingInput">Alan(ör: Back-end - Front-end)</label>
            </div>
            <div class="form-floating mb-3">
                <input name="Mail" type="email" class="form-control" id="Mail12" placeholder="Mail" value="@Model.Data.Mail" required>
                <label for="floatingInput">Mail Adresi</label>
            </div>
            <div class="form-floating mb-3">
                <input name="PhoneNumber" type="text" class="form-control" id="PhoneNumber12" oninput="formatPhoneNumber(this)" maxlength="17" placeholder="PhoneNumber" value="@Model.Data.PhoneNumber" required>

                <small>Lütfen +90 (5**) *** **** formatında 10 haneli bir telefon numarası girin.</small>
                <label for="floatingInput">Telefon Numarası</label>
            </div>
            <div class="form-floating mb-3">
                <select name="Gender" class="form-select" id="Gender" onchange="checkGender()" required>
                    <option value="">Cinsiyet Seçiniz</option>
                    <option value="Kadın" @(Model.Data.Gender == "Kadın" ? "selected" : "")>Kadın</option>
                    <option value="Erkek" @(Model.Data.Gender == "Erkek" ? "selected" : "")>Erkek</option>
                </select>
                <label for="Gender">Cinsiyet</label>
            </div>
            <div class="form-floating mb-3">
                <select name="MilitarySituation" class="form-select" id="MilitarySituation" onchange="checkMilitarySituation()" required>
                    <option>Askerlik Durumu Seçiniz</option>
                    <option value="Tecilli" @(Model.Data.MilitarySituation == "Tecilli" ? "selected" : "")>Tecilli</option>
                    <option value="Yapıldı" @(Model.Data.MilitarySituation == "Yapıldı" ? "selected" : "")>Yapıldı</option>
                    <option value="Muaf" @(Model.Data.MilitarySituation == "Muaf" ? "selected" : "")>Muaf</option>
                </select>
                <label for="MilitarySituation">Askerlik Durumu</label>
            </div>
            <div class="form-floating mb-3">
                <input name="Nationality" type="text" class="form-control" id="Nationality" placeholder="Uyruk" value="@Model.Data.Nationality" required>
                <label for="floatingInput">Uyruk</label>
            </div>            
            <div class="form-floating mb-3">
                <input name="Address" type="text" class="form-control" id="Address" placeholder="Adres" value="@Model.Data.Address" required>
                <label for="floatingInput">Adres</label>
            </div>            
            <div class="form-floating mb-3">
                <input name="DriverLicence" type="text" class="form-control" id="DriverLicence" placeholder="Sürücü Belgesi" value="@Model.Data.DriverLicence" required>
                <label for="floatingInput">Sürücü Belgesi</label>
            </div>
            <div class="form-floating mb-3">
                <select name="Travelability" class="form-select" id="Travelability" onchange="checkTravelability()" required>
                    <option value="Evet" @(Model.Data.Travelability == "Evet" ? "selected" : "")>Evet</option>
                    <option value="Hayır" @(Model.Data.Travelability == "Hayır" ? "selected" : "")>Hayır</option>
                </select>
                <label for="Travelability">Seyahat Edebilirlik</label>
            </div>
            <div class="form-floating mb-3">
                <select name="MaritalStatus" class="form-select" id="MaritalStatus" onchange="checkMaritalStatus()" required>
                    <option value="Bekar" @(Model.Data.MaritalStatus == "Bekar" ? "selected" : "")>Bekar</option>
                    <option value="Evli" @(Model.Data.MaritalStatus == "Evli" ? "selected" : "")>Evli</option>
                </select>
                <label for="MaritalStatus">Medeni Durumu</label>
            </div>
            <div class="form-floating">
                <textarea name="Resume" class="form-control" placeholder="Kendini burda tanıt" id="Resume" style="height: 150px;" required>@Model.Data.Resume</textarea>
                <label for="floatingTextarea">Özgeçmiş</label>
            </div>
            <div class="form-floating mb-3 d-flex">
                <button type="submit" id="deneme" class="btn btn-outline-success m-2 justify-content-end">Kaydet</button>
            </div>
        </form>
    </div>

</div>
<script>
    window.onload = function () {
        checkGender();
    };
    function checkGender() {
        var gender = document.getElementById("Gender").value;
        var militarySituationContainer = document.getElementById("MilitarySituation");

        if (gender === "Kadın") {
            militarySituationContainer.style.display = "none";
            militarySituationContainer.value = "Yok"; // "Yok" değerini militarySituationContainer'a ata
        } else {
            militarySituationContainer.style.display = "block";
            // Eğer cinsiyet "Kadın" değilse, militarySituationContainer'ın değerini değiştirmeyin
        }
    }
</script>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        var input = document.getElementById('PhoneNumber12');
        input.addEventListener('input', function () {
            formatPhoneNumber(this);
        });
    });
    function formatPhoneNumber(input) {
        var cleaned = ('' + input.value).replace(/\D/g, ''); // Sadece rakamları al
        var match = cleaned.match(/^(\d{3})(\d{3})(\d{2})(\d{2})$/); // Telefon numarasını parçala

        if (match) {
            // Parantezli formatı uygula
            if (cleaned.length <= 3) {
                input.value = '+90 (' + match[1];
            } else if (cleaned.length <= 6) {
                input.value = '+90 (' + match[1] + ')-' + match[2];
            } else if (cleaned.length <= 8) {
                input.value = '+90 (' + match[1] + ')-' + match[2] + '-' + match[3];
            } else {
                input.value = '+90 (' + match[1] + ')-' + match[2] + '-' + match[3] + '-' + match[4];
            }
        }

        // 10 karakterden fazla girişi engelle
        if (cleaned.length > 12) {
            input.value = input.value.slice(0, -1);
        }
    }
</script>




<script type="text/javascript">
    $("#deneme").click(function (e) {
        e.preventDefault(); // Form submitini engelle

        var formValid = true; // Form geçerliliği kontrolü

        // Her form elemanını kontrol et
        $("form input[required], form textarea[required]").each(function () {
            // Eğer boşsa
            if (!$(this).val()) {
                formValid = false; // Form geçersiz
                $(this).addClass("is-invalid"); // Hata göstergesi ekle
                $(this).siblings(".invalid-feedback").remove(); // Var olan hata mesajını kaldır
                $(this).after('<div class="invalid-feedback">Bu alan boş bırakılamaz.</div>'); // Yeni hata mesajı ekle
            } else {
                $(this).removeClass("is-invalid"); // Hata göstergesini kaldır
                $(this).siblings(".invalid-feedback").remove(); // Hata mesajını kaldır
            }
        });

        // Eğer form geçerliyse
        if (formValid) {
            var formData = new FormData();

            // Form alanlarını FormData'ya ekle
            formData.append("Intro", $("#Intro").val());
            formData.append("NameSurname", $("#NameSurname").val());
            formData.append("BirthDate", $("#BirthDate").val());
            formData.append("Job", $("#Job").val());
            formData.append("Mail", $("#Mail12").val());
            formData.append("PhoneNumber", $("#PhoneNumber12").val());
            formData.append("Resume", $("#Resume").val());
            formData.append("Photo", $("#Photo").val());
            formData.append("MilitarySituation", $("#MilitarySituation").val());
            formData.append("Gender", $("#Gender").val());
            formData.append("Nationality", $("#Nationality").val());
            formData.append("Address", $("#Address").val());
            formData.append("DriverLicence", $("#DriverLicence").val());
            formData.append("Travelability", $("#Travelability").val());
            formData.append("MaritalStatus", $("#MaritalStatus").val());
            var file = $("#FormFile")[0].files[0];
            formData.append("ImageFile", file);

            $.ajax({
                type: "POST",
                url: "/UpdateAbout",
                data: formData,
                processData: false,  // processData ve contentType false olmalı
                contentType: false,
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            title: "Başarılı!",
                            text: response.responseText,
                            icon: "success"
                        }).then(function () {
                            location.reload(); // Sayfanın yenilenmesi
                        });
                    } else {
                        Swal.fire({
                            title: "HATA!!!",
                            text: response.responseText,
                            icon: "error"
                        });
                    }
                },
            });
        }
    });

</script>